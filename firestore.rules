rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any user profile (for invites), but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for workspaces and their subcollections (boards, groups, tasks, etc.)
    match /workspaces/{workspaceId} {
      // Allow a user to read a workspace doc if they are a member.
      allow get: if request.auth.uid in resource.data.members;

      // Allow a user to list/query the collections within a workspace if they are a member.
      // This is crucial for the dashboard and board pages to load data.
      allow list: if request.auth.uid in get(/databases/$(database)/documents/workspaces/$(workspaceId)).data.members;
      
      // Allow creating/updating/deleting a workspace if the user is an owner.
      // Note: simplified for now. A real app would have more granular role checks.
      allow write: if request.auth.uid == resource.data.ownerId;

      // This rule applies to all subcollections of a workspace (boards, groups, tasks, etc.)
      match /{subcollection}/{docId} {
        // Allow read/write access to any document in any subcollection
        // if the user is a member of the parent workspace.
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/workspaces/$(workspaceId)).data.members;
      }
    }
  }
}
