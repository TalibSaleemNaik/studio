
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read their own profile, but anyone authenticated can list users for invites.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Access to workspaces and their subcollections (boards, groups, tasks)
    // is controlled by board-level membership.
    match /workspaces/{workspaceId} {
      // Allow reading/writing a workspace doc if the user is a member of that workspace.
      // This is less critical as the main data is in subcollections.
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/workspaces/$(workspaceId)).data.members[request.auth.uid] != null;

      // Rule for all subcollections under a workspace (boards, groups, tasks, etc.)
      match /{subcollection}/{docId} {
        // To read/write anything inside a workspace subcollection, the user must be a member
        // of the board associated with that document.
        allow read, write: if request.auth != null &&
          get(/databases/$(database)/documents/workspaces/$(workspaceId)/boards/$(resource.data.boardId)).data.members[request.auth.uid] != null;
      }

      // Rule for comments which are nested deeper
      match /tasks/{taskId}/comments/{commentId} {
        allow read, write: if request.auth != null &&
          get(/databases/$(database)/documents/workspaces/$(workspaceId)/boards/$(get(/databases/$(database)/documents/workspaces/$(workspaceId)/tasks/$(taskId)).data.boardId)).data.members[request.auth.uid] != null;
      }
    }
  }
}
