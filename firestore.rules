
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read any user profile (for invites) but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    // Rules for workspaces and their subcollections (boards, groups, tasks)
    match /workspaces/{workspaceId} {
      // Allow read/write to workspace doc if user is a member
      allow read, write: if request.auth != null && request.auth.uid in resource.data.members;

      // Allow board access if the user is a member of the parent workspace
      match /boards/{boardId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/workspaces/$(workspaceId)).data.members[request.auth.uid] != null;
      }
      
      // Allow group access if the user is a member of the parent workspace
      match /groups/{groupId} {
         allow read, write: if request.auth != null && get(/databases/$(database)/documents/workspaces/$(workspaceId)).data.members[request.auth.uid] != null;
      }

      // Allow task access if the user is a member of the parent workspace
      match /tasks/{taskId} {
         allow read, write: if request.auth != null && get(/databases/$(database)/documents/workspaces/$(workspaceId)).data.members[request.auth.uid] != null;
        
        // Rules for comments subcollection on a task
        match /comments/{commentId} {
          // Allow anyone who can see the task to also read its comments
          allow read: if request.auth != null && get(/databases/$(database)/documents/workspaces/$(workspaceId)).data.members[request.auth.uid] != null;
          // Allow a user to create a comment, and only allow the author to update/delete it
          allow create: if request.auth != null;
          allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
        }
      }
    }
  }
}
